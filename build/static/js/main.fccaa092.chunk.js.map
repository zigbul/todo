{"version":3,"sources":["components/new-task-form/index.js","components/new-task-form/new-task-form.js","components/task/index.js","components/task/task.js","components/task-list/index.js","components/task-list/task-list.js","components/tasks-filter/tasks-filter.js","components/footer/index.js","components/footer/footer.js","components/todoapp/index.js","components/todoapp/todoapp.js","index.js"],"names":["NewTaskForm","onItemAdded","className","placeholder","autoFocus","onKeyDown","Task","this","props","description","onDeleted","onToggleCompleted","onToggleEditing","completed","classNames","editing","type","onClick","value","Component","TaskList","tasks","elements","map","item","key","taskItems","TasksFilter","Footer","taskCount","TodoApp","maxId","state","taskData","createTodoItem","deleteItem","setState","idx","findIndex","el","before","slice","after","addItem","text","newItem","toggleProperty","arr","propName","oldItem","completedCount","filter","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.fccaa092.chunk.js","sourcesContent":["import NewTaskForm from './new-task-form';\r\n\r\nexport default NewTaskForm;","import React from 'react';\r\n\r\nconst NewTaskForm = ({ onItemAdded }) => {\r\n   return (\r\n      <input\r\n         className=\"new-todo\"\r\n         placeholder=\"What needs to be done?\"\r\n         autoFocus\r\n         onKeyDown={() => onItemAdded('Hello, world!')} />\r\n   );\r\n};\r\n\r\nexport default NewTaskForm;","import Task from './task';\r\n\r\nexport default Task;","import React, { Component } from 'react';\r\n\r\nexport default class Task extends Component {\r\n\r\n   render() {\r\n\r\n      const { description, onDeleted,\r\n         onToggleCompleted, onToggleEditing,\r\n         completed, editing } = this.props;\r\n\r\n      let classNames = '';\r\n\r\n      if (editing) {\r\n         classNames += ' editing';\r\n      }\r\n\r\n      if (completed) {\r\n         classNames += ' completed'\r\n      }\r\n\r\n      return (\r\n         <li className={classNames}>\r\n            <div className=\"view\">\r\n               <input\r\n                  className=\"toggle\"\r\n                  type=\"checkbox\"\r\n                  onClick={onToggleCompleted} />\r\n               <label>\r\n                  <span className=\"description\">{description}</span>\r\n                  <span className=\"created\">created 5 minutes ago</span>\r\n               </label>\r\n               <button\r\n                  className=\"icon icon-edit\"\r\n                  onClick={onToggleEditing} >\r\n               </button>\r\n               <button\r\n                  className=\"icon icon-destroy\"\r\n                  onClick={onDeleted}>\r\n               </button>\r\n            </div>\r\n            <input type=\"text\" className=\"edit\" value={description} />\r\n         </li >\r\n      );\r\n   };\r\n};","import TaskList from './task-list';\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport Task from '../task';\r\n\r\nconst TaskList = ({ tasks, onDeleted, onToggleCompleted, onToggleEditing }) => {\r\n\r\n   const elements = tasks.map((item) => {\r\n\r\n      const { key, ...taskItems } = item;\r\n\r\n      return (\r\n         <Task\r\n            key={key}\r\n            {...taskItems}\r\n            onDeleted={() => onDeleted(key)}\r\n            onToggleCompleted={() => onToggleCompleted(key)}\r\n            onToggleEditing={() => onToggleEditing(key)} />\r\n      );\r\n   });\r\n\r\n   return (\r\n      <ul className=\"todo-list\">\r\n         {elements}\r\n      </ul>\r\n   );\r\n};\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\r\n\r\nexport default class TasksFilter extends Component {\r\n   \r\n   render() {\r\n      return (\r\n         <ul className=\"filters\">\r\n            <li>\r\n               <button className=\"selected\">All</button>\r\n            </li>\r\n            <li>\r\n               <button>Active</button>\r\n            </li>\r\n            <li>\r\n               <button>Completed</button>\r\n            </li>\r\n         </ul>\r\n      );\r\n   };\r\n};","import Footer from './footer';\r\n\r\nexport default Footer;","import React from 'react';\r\nimport TasksFilter from '../tasks-filter/tasks-filter';\r\n\r\nconst Footer = ({ taskCount }) => {\r\n   return (\r\n      <footer className=\"footer\">\r\n         <span className=\"todo-count\">{taskCount} items left</span>\r\n         <TasksFilter />\r\n         <button className=\"clear-completed\">Clear completed</button>\r\n      </footer>\r\n   );\r\n};\r\n\r\nexport default Footer;","import TodoApp from './todoapp';\r\n\r\nexport default TodoApp;","import React, { Component } from 'react';\r\nimport '../../index.css';\r\n\r\nimport NewTaskForm from '../new-task-form';\r\nimport TaskList from '../task-list';\r\nimport Footer from '../footer';\r\n\r\nexport default class TodoApp extends Component {\r\n\r\n   maxId = 100;\r\n\r\n   state = {\r\n      taskData: [\r\n         this.createTodoItem('Completed Task'),\r\n         this.createTodoItem('Editing Task'),\r\n         this.createTodoItem('New Task'),\r\n      ]\r\n   };\r\n\r\n   createTodoItem(description) {\r\n      return {\r\n         description,\r\n         completed: false,\r\n         editing: false,\r\n         key: this.maxId++\r\n      }\r\n   }\r\n\r\n   deleteItem = (key) => {\r\n      this.setState(({ taskData }) => {\r\n\r\n         const idx = taskData.findIndex((el) => el.key === key);\r\n\r\n         const before = taskData.slice(0, idx);\r\n         const after = taskData.slice(idx + 1);\r\n\r\n         const newTaskData = [...before, ...after];\r\n\r\n         return {\r\n            taskData: newTaskData\r\n         };\r\n      });\r\n   };\r\n\r\n   addItem = (text) => {\r\n\r\n      const newItem = this.createTodoItem(text);\r\n\r\n      this.setState(({ taskData }) => {\r\n\r\n         const newTaskData = [\r\n            ...taskData,\r\n            newItem\r\n         ];\r\n\r\n         return {\r\n            taskData: newTaskData\r\n         };\r\n      });\r\n   };\r\n\r\n   toggleProperty(arr, key, propName) {\r\n      const idx = arr.findIndex((el) => el.key === key);\r\n\r\n      const oldItem = arr[idx];\r\n      const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n      const before = arr.slice(0, idx);\r\n      const after = arr.slice(idx + 1);\r\n\r\n      return [...before, newItem, ...after];\r\n   };\r\n\r\n   onToggleCompleted = (key) => {\r\n      this.setState(({ taskData }) => {\r\n         return {\r\n            taskData: this.toggleProperty(taskData, key, 'completed')\r\n         };\r\n      });\r\n   };\r\n\r\n   onToggleEditing = (key) => {\r\n      this.setState(({ taskData }) => {\r\n         return {\r\n            taskData: this.toggleProperty(taskData, key, 'editing')\r\n         };\r\n      });\r\n   };\r\n\r\n   render() {\r\n\r\n      const { taskData } = this.state;\r\n      const completedCount = taskData.filter((el) => el.completed).length;\r\n      const taskCount = taskData.length - completedCount;\r\n\r\n      return (\r\n         <section className=\"todoapp\" >\r\n            <header className=\"header\">\r\n               <h1>todos</h1>\r\n               <NewTaskForm onItemAdded={this.addItem} />\r\n            </header>\r\n            <section className=\"main\">\r\n               <TaskList\r\n                  tasks={taskData}\r\n                  onDeleted={this.deleteItem}\r\n                  onToggleCompleted={this.onToggleCompleted}\r\n                  onToggleEditing={this.onToggleEditing} />\r\n               <Footer taskCount={taskCount} />\r\n            </section>\r\n         </section>\r\n      );\r\n   };\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport TodoApp from './components/todoapp';\r\n\r\nReactDOM.render(<TodoApp />, document.querySelector('#root'));"],"sourceRoot":""}